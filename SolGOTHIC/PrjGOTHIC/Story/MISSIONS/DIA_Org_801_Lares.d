
instance ORG_801_Lares_Exit(C_Info)
{
	npc = Org_801_Lares;
	nr = 999;
	condition = ORG_801_Lares_Exit_Condition;
	information = ORG_801_Lares_Exit_Info;
	permanent = 1;
	description = DIALOG_ENDE;
};


func int ORG_801_Lares_Exit_Condition()
{
	return TRUE;
};

func void ORG_801_Lares_Exit_Info()
{
	AI_StopProcessInfos(self);
};


var int Lares_vorbeigemogelt;

instance ORG_801_Lares_YouHere(C_Info)
{
	npc = Org_801_Lares;
	nr = 1;
	condition = ORG_801_Lares_YouHere_Condition;
	information = ORG_801_Lares_YouHere_Info;
	permanent = 1;
	important = 1;
};


func int ORG_801_Lares_YouHere_Condition()
{
	var C_Npc Roscoe;
	Roscoe = Hlp_GetNpc(ORG_840_Roscoe);
	if(Roscoe.aivar[AIV_PASSGATE] == FALSE)
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_YouHere_Info()
{
	var C_Npc Roscoe;
	Roscoe = Hlp_GetNpc(ORG_840_Roscoe);
	if(Npc_IsInState(Roscoe,ZS_MagicSleep) || (Npc_GetTempAttitude(Roscoe,other) == ATT_FRIENDLY))
	{
		AI_Output(self,other,"ORG_801_Lares_YouHere_11_00");	//Как ты сюда попал? Что случилось с Роско?
		AI_Output(other,self,"ORG_801_Lares_YouHere_15_01");	//Он почему-то не захотел меня останавливать.
		AI_Output(self,other,"ORG_801_Lares_YouHere_11_02");	//Что тебе нужно?
		Roscoe.aivar[AIV_PASSGATE] = 1;
		Lares_vorbeigemogelt = 1;
		B_GiveXP(XP_CheatedIntoLaresHut);
	}
	else
	{
		Npc_SetTempAttitude(self,ATT_HOSTILE);
		AI_StopProcessInfos(self);
		Npc_SetTarget(self,other);
		AI_StartState(self,ZS_Attack,1,"");
	};
};


instance ORG_801_Lares_WannaJoin(C_Info)
{
	npc = Org_801_Lares;
	nr = 1;
	condition = ORG_801_Lares_WannaJoin_Condition;
	information = ORG_801_Lares_WannaJoin_Info;
	permanent = 0;
	description = "Хочу присоединиться к твоей шайке.";
};


func int ORG_801_Lares_WannaJoin_Condition()
{
	if((Npc_GetTrueGuild(hero) == GIL_None) && (Kapitel < 2))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_WannaJoin_Info()
{
	AI_Output(other,self,"ORG_801_Lares_WannaJoin_15_00");	//Хочу присоединиться к твоей шайке.
	AI_Output(self,other,"ORG_801_Lares_WannaJoin_11_01");	//В самом деле? Да кто ты вообще такой?
};


var int Lares_BringListBack;

instance ORG_801_Lares_BringList(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_BringList_Condition;
	information = ORG_801_Lares_BringList_Info;
	permanent = 0;
	description = "У меня с собой список припасов для Старой Шахты.";
};


func int ORG_801_Lares_BringList_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_WannaJoin) && Npc_HasItems(hero,TheList))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_BringList_Info()
{
	AI_Output(other,self,"ORG_801_Lares_BringList_15_00");	//У меня с собой список припасов для Старой Шахты.
	AI_Output(self,other,"ORG_801_Lares_BringList_11_01");	//Нет! Глазам своим не верю! Да, парень, наглости тебе не занимать!
	AI_Output(self,other,"ORG_801_Lares_BringList_11_02");	//Покажи мне его!
	AI_Output(other,self,"ORG_801_Lares_BringList_15_03");	//Вот он...
	B_UseFakeScroll();
	AI_Output(self,other,"ORG_801_Lares_BringList_11_04");	//Точно! И знаешь, как мы с этим поступим? Мы немного подправим список, и ты отнесешь его в Старый Лагерь!
	AI_Output(self,other,"ORG_801_Lares_BringList_11_05");	//А затем, когда они доставят все в шахту, мы организуем небольшой налет и заберем добро себе! Это не займет и минуты... Ха! Вот список. Ты знаешь, что делать. 
	Points_NC = Points_NC + 10;
	Lares_BringListBack = LOG_RUNNING;
	Npc_RemoveInvItem(hero,TheList);
	CreateInvItem(hero,TheListNC);
	if(Npc_GetTrueGuild(hero) == GIL_None)
	{
		Log_CreateTopic(CH1_JoinNC,LOG_MISSION);
		Log_SetTopicStatus(CH1_JoinNC,LOG_RUNNING);
	};
	B_LogEntry(CH1_JoinNC,"Ларс, лидер воров, был очень удивлен, когда увидел список. Он дополнил его, и теперь я должен отнести его Диего.");
	B_GiveXP(XP_GiveListToLares);
};


instance ORG_801_Lares_BringListBack(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_BringListBack_Condition;
	information = ORG_801_Lares_BringListBack_Info;
	permanent = 0;
	description = "Я передал список Диего.";
};


func int ORG_801_Lares_BringListBack_Condition()
{
	if((Lares_BringListBack == LOG_RUNNING) && (Diego_BringList == LOG_SUCCESS))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_BringListBack_Info()
{
	AI_Output(other,self,"ORG_801_Lares_BringListBack_15_00");	//Я передал список Диего.
	AI_Output(self,other,"ORG_801_Lares_BringListBack_11_01");	//Хорошо! Я расставил своих людей на пути к Старой Шахте. Сейчас стражники Торуса уже должны быть мертвы.
	Points_NC = Points_NC + 10;
	Lares_BringListBack = LOG_SUCCESS;
	B_LogEntry(CH1_JoinNC,"Ларс уже ограбил конвой из Старого Лагеря. Совпадение? Или расчет? Вот в чем вопрос.");
	B_GiveXP(XP_ReportListDeliveryToLares);
};


instance ORG_801_Lares_BringListAnteil(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_BringListAnteil_Condition;
	information = ORG_801_Lares_BringListAnteil_Info;
	permanent = 0;
	description = "Так конвой уже разбит? А где моя доля?";
};


func int ORG_801_Lares_BringListAnteil_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_BringListBack))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_BringListAnteil_Info()
{
	var C_Npc gorn;
	AI_Output(other,self,"ORG_801_Lares_BringListAnteil_15_00");	//Так конвой уже разбит? А где моя доля?
	AI_Output(self,other,"ORG_801_Lares_BringListAnteil_11_01");	//Поговори с Горном. Он отдаст тебе твою долю.
	gorn = Hlp_GetNpc(PC_Fighter);
	if(gorn.aivar[AIV_FINDABLE] == TRUE)
	{
		AI_Output(other,self,"ORG_801_Lares_BringListAnteil_15_02");	//Я знаю Горна. Он не член шайки. Он наемник и работает на магов.
		AI_Output(self,other,"ORG_801_Lares_BringListAnteil_11_03");	//Да, все верно.
		AI_Output(other,self,"ORG_801_Lares_BringListAnteil_15_04");	//Так он в деле?
		AI_Output(self,other,"ORG_801_Lares_BringListAnteil_11_05");	//Чем меньше знаешь, тем крепче спишь. Просто иди к нему и забери свою долю.
	};
	B_LogEntry(CH1_JoinNC,"Горн, наемник, каким-то образом принимал участие в налете на конвой. От него-то я и получу свою долю.");
	gorn.aivar[AIV_FINDABLE] = 1;
};


instance ORG_801_Lares_MordragSentMe(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_MordragSentMe_Condition;
	information = ORG_801_Lares_MordragSentMe_Info;
	permanent = 0;
	description = "Меня прислал Мордраг.";
};


func int ORG_801_Lares_MordragSentMe_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_WannaJoin) && Npc_HasItems(hero,MordragsRing) && (Kapitel < 2))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_MordragSentMe_Info()
{
	B_GiveInvItems(other,self,MordragsRing,1);
	AI_Output(other,self,"ORG_801_Lares_MordragSentMe_15_00");	//Меня прислал Мордраг. Он велел передать тебе это кольцо.
	AI_Output(self,other,"ORG_801_Lares_MordragSentMe_11_01");	//Дорогая вещица! Здесь это обычное дело: получил что-то - поделись с главарем шайки.
	AI_Output(self,other,"ORG_801_Lares_MordragSentMe_11_02");	//Но то, что он передал это кольцо именно через ТЕБЯ, уже говорит о многом. Похоже, Мордраг тебе доверяет.
	AI_Output(self,other,"ORG_801_Lares_MordragSentMe_11_03");	//Я хочу, чтобы ты сходил к нему и передал ему кое-что от меня.
	AI_Output(self,other,"ORG_801_Lares_MordragSentMe_11_04");	//Скажи ему, что мне нужен человек в Лагере Сектантов. Они затевают что-то большое - и я хочу знать, что происходит.
	Lares_InformMordrag = LOG_RUNNING;
	if(Npc_GetTrueGuild(hero) == GIL_None)
	{
		Log_CreateTopic(CH1_JoinNC,LOG_MISSION);
		Log_SetTopicStatus(CH1_JoinNC,LOG_RUNNING);
	};
	B_LogEntry(CH1_JoinNC,"Ларс послал меня к Мордрагу. Он хочет, чтобы я передал ему следующее: в Лагерь Братства будет заслан шпион с целью выяснения планов Братства.");
	B_GiveXP(XP_GiveRingToLares);
	Points_NC = Points_NC + 10;
};


instance ORG_801_Lares_Vorbeigemogelt(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_Vorbeigemogelt_Condition;
	information = ORG_801_Lares_Vorbeigemogelt_Info;
	permanent = 0;
	description = "Я сумел пройти мимо твоих стражников.";
};


func int ORG_801_Lares_Vorbeigemogelt_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_WannaJoin) && (Lares_vorbeigemogelt == TRUE))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_Vorbeigemogelt_Info()
{
	AI_Output(other,self,"ORG_801_Lares_Vorbeigemogelt_15_00");	//Я сумел пройти мимо твоих стражников.
	AI_Output(self,other,"ORG_801_Lares_Vorbeigemogelt_11_01");	//Верно. Но этого мало.
	Points_NC = Points_NC + 10;
};


var int Lares_Get400Ore;

instance ORG_801_Lares_GetKraut(C_Info)
{
	npc = Org_801_Lares;
	nr = 10;
	condition = ORG_801_Lares_GetKraut_Condition;
	information = ORG_801_Lares_GetKraut_Info;
	permanent = 0;
	description = "Что еще я могу сделать?";
};


func int ORG_801_Lares_GetKraut_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_BringList) || Npc_KnowsInfo(hero,ORG_801_Lares_MordragSentMe) || Npc_KnowsInfo(hero,ORG_801_Lares_Vorbeigemogelt))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_GetKraut_Info()
{
	AI_Output(other,self,"ORG_801_Lares_GetKraut_15_00");	//Что еще я могу сделать?
	AI_Output(self,other,"ORG_801_Lares_GetKraut_11_01");	//Идол Исидро из Лагеря Сектантов таскает с собой болотника кусков на 400 руды, не меньше! Хочу, чтобы ты избавил его от этой тяжкой ноши. Как ты это сделаешь, меня не волнует.
	if((BaalIsidro_DealerJob == LOG_RUNNING) || (BaalIsidro_DealerJob == LOG_SUCCESS))
	{
		AI_Output(other,self,"ORG_801_Lares_GetKraut_15_02");	//Если ты говоришь о той большой куче болотника, то она уже у меня.
		AI_Output(self,other,"ORG_801_Lares_GetKraut_11_03");	//Да, башковитый ты парень!
	};
	AI_Output(self,other,"ORG_801_Lares_GetKraut_11_04");	//Если болотник у тебя, продай его и принеси мне 400 кусков руды.
	AI_Output(self,other,"ORG_801_Lares_GetKraut_11_05");	//Тогда можно будет поговорить и о приеме в шайку.
	Lares_Get400Ore = LOG_RUNNING;
	if(Npc_GetTrueGuild(hero) == GIL_None)
	{
		Log_CreateTopic(CH1_JoinNC,LOG_MISSION);
		Log_SetTopicStatus(CH1_JoinNC,LOG_RUNNING);
	};
	B_LogEntry(CH1_JoinNC,"Мне было сказано взять болотник Идола Исидро и продать его за 400 кусков руды. Ларс хочет получить прибыль.");
};


instance ORG_801_Lares_400Ore(C_Info)
{
	npc = Org_801_Lares;
	nr = 2;
	condition = ORG_801_Lares_400Ore_Condition;
	information = ORG_801_Lares_400Ore_Info;
	permanent = 1;
	description = "400 кусков руды у меня.";
};


func int ORG_801_Lares_400Ore_Condition()
{
	if((Lares_Get400Ore == LOG_RUNNING) && ((BaalIsidro_DealerJob == LOG_RUNNING) || (BaalIsidro_DealerJob == LOG_SUCCESS)))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_400Ore_Info()
{
	AI_Output(other,self,"ORG_801_Lares_400Ore_15_00");	//400 кусков руды у меня.
	if(Npc_HasItems(other,ItMiNugget) >= 400)
	{
		AI_Output(self,other,"ORG_801_Lares_400Ore_11_01");	//Хорошо! Очень хорошо. Думаю, этого должно быть достаточно.
		Lares_Get400Ore = LOG_SUCCESS;
		Points_NC = Points_NC + 10;
		B_GiveInvItems(other,self,ItMiNugget,400);
		B_LogEntry(CH1_JoinNC,"Ларс не смог скрыть своего удовлетворения, когда я дал ему 400 кусков руды, вырученные с продажи болотника Исидро.");
		B_GiveXP(XP_BaalIsidroPayLares);
	}
	else
	{
		AI_Output(self,other,"ORG_801_Lares_400Ore_NOORE_11_00");	//Пересчитай-ка еще раз. Надеюсь, ты не спустил половину по пьяни?
	};
};


instance ORG_801_Lares_Reicht(C_Info)
{
	npc = Org_801_Lares;
	nr = 5;
	condition = ORG_801_Lares_Reicht_Condition;
	information = ORG_801_Lares_Reicht_Info;
	permanent = 1;
	description = "...этого достаточно, чтобы ты принял меня в шайку?";
};


func int ORG_801_Lares_Reicht_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_WannaJoin) && (Npc_KnowsInfo(hero,ORG_801_Lares_MordragSentMe) || Npc_KnowsInfo(hero,ORG_801_Lares_BringList)) && (Npc_GetTrueGuild(other) == GIL_None) && (Kapitel < 2))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_Reicht_Info()
{
	AI_Output(other,self,"ORG_801_Lares_Reicht_15_00");	//Ну как: этого достаточно, чтобы ты принял меня в шайку?
	if((Points_NC >= 30) && (hero.level >= 5))
	{
		AI_Output(self,other,"ORG_801_Lares_Reicht_AUFNAHME_11_00");	//Я бы сказал - да!
		AI_Output(self,other,"ORG_801_Lares_Reicht_AUFNAHME_11_01");	//И у меня даже есть для тебя подарок - доспехи получше тех, что ты сейчас носишь. Ты заслужил их!
		hero.guild = GIL_ORG;
		Npc_SetTrueGuild(hero,GIL_ORG);
		CreateInvItem(hero,org_armor_l);
		CreateInvItem(self,ItAmArrow);
		B_GiveInvItems(self,hero,ItAmArrow,1);
		Npc_RemoveInvItem(hero,ItAmArrow);
		AI_EquipBestArmor(hero);
		B_GiveXP(XP_BecomeBandit);
		B_LogEntry(CH1_JoinNC,"Ларс принял меня в банду. Теперь Новый Лагерь - это мой дом!");
		Log_SetTopicStatus(CH1_JoinNC,LOG_SUCCESS);
		Log_CreateTopic(CH1_JoinOC,LOG_MISSION);
		Log_SetTopicStatus(CH1_JoinOC,LOG_FAILED);
		B_LogEntry(CH1_JoinOC,"Участник банды Ларса не может присоединиться к Старому Лагерю. Это просто невозможно.");
		Log_CreateTopic(CH1_JoinPsi,LOG_MISSION);
		Log_SetTopicStatus(CH1_JoinPsi,LOG_FAILED);
		B_LogEntry(CH1_JoinPsi,"Братству придется как-то обходиться без меня, поскольку теперь Новый Лагерь является моим домом.");
		Log_SetTopicStatus(CH1_LostNek,LOG_FAILED);
		Log_SetTopicStatus(CH1_FiskNewDealer,LOG_FAILED);
		Log_SetTopicStatus(CH1_KalomsRecipe,LOG_FAILED);
		Log_SetTopicStatus(CH1_BringList,LOG_FAILED);
		Log_SetTopicStatus(CH1_MordragKO,LOG_FAILED);
	}
	else
	{
		if(Npc_KnowsInfo(hero,ORG_801_Lares_MordragSentMe))
		{
			AI_Output(self,other,"ORG_801_Lares_Reicht_11_02");	//Мордраг говорил о тебе.
		};
		if(Npc_KnowsInfo(hero,ORG_801_Lares_BringList))
		{
			AI_Output(self,other,"ORG_801_Lares_Reicht_11_03");	//Ты стал знаменитым с тех пор, как принес сюда тот список.
		};
		AI_Output(self,other,"ORG_801_Lares_Reicht_11_04");	//Но ты еще не готов. Занимайся своими делами.
		B_PrintGuildCondition(5);
	};
};


instance ORG_801_Lares_GotoKalom(C_Info)
{
	npc = Org_801_Lares;
	nr = 10;
	condition = ORG_801_Lares_GotoKalom_Condition;
	information = ORG_801_Lares_GotoKalom_Info;
	permanent = 0;
	description = "И что я теперь должен делать?";
};


func int ORG_801_Lares_GotoKalom_Condition()
{
	if(Npc_GetTrueGuild(other) == GIL_ORG)
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_GotoKalom_Info()
{
	var C_Npc Mordrag;
	AI_Output(other,self,"ORG_801_Lares_GotoKalom_15_00");	//И что я теперь должен делать?
	AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_01");	//Теперь ты член нашей шайки. Можешь делать все, что захочешь.
	Log_CreateTopic(CH1_GotoPsiCamp,LOG_MISSION);
	Log_SetTopicStatus(CH1_GotoPsiCamp,LOG_RUNNING);
	B_LogEntry(CH1_GotoPsiCamp,"Братство в Болотном Лагере планирует что-то большое.");
	if(Lares_InformMordrag == LOG_RUNNING)
	{
		AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_02");	//Если действительно хочешь помочь, отправляйся к Мордрагу и помоги ему в деле с сектантами.
		B_LogEntry(CH1_GotoPsiCamp,"Я должен помочь Мордрагу разобраться в том, что же здесь происходит.");
	}
	else
	{
		Mordrag = Hlp_GetNpc(ORG_826_Mordrag);
		if(Npc_IsDead(Mordrag))
		{
			AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_03");	//Один из наших людей в Старом Лагере, Мордраг, был убит. Перед смертью он успел послать нам весточку. В Лагере Сектантов затевается что-то большое.
			AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_04");	//Отправляйся в Лагерь Братства и выясни, что там происходит.
			B_LogEntry(CH1_GotoPsiCamp,"Он отправил меня прямо в Лагерь Братства.");
		}
		else
		{
			AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_05");	//Вернулся наш человек из Старого Лагеря - Мордраг. 
			AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_06");	//Поговори с ним. Скажи, что мне нужен свой человек в Лагере Сектантов. Братство затевает что-то большое - и я хочу знать, что происходит.
			AI_Output(self,other,"ORG_801_Lares_GotoKalom_11_07");	//Помоги ему.
			B_LogEntry(CH1_GotoPsiCamp,"Вор по имени Мордраг должен об этом позаботиться. Обычно его можно найти в баре на озере, рядом с Новым Лагерем.");
			B_ExchangeRoutine(ORG_826_Mordrag,"START");
			Lares_InformMordrag = LOG_RUNNING;
		};
	};
};


instance ORG_801_Lares_WhereLearn(C_Info)
{
	npc = Org_801_Lares;
	nr = 20;
	condition = ORG_801_Lares_WhereLearn_Condition;
	information = ORG_801_Lares_WhereLearn_Info;
	permanent = 0;
	description = "Я хотел бы чему-нибудь научиться.";
};


func int ORG_801_Lares_WhereLearn_Condition()
{
	return TRUE;
};

func void ORG_801_Lares_WhereLearn_Info()
{
	AI_Output(other,self,"ORG_801_Lares_WhereLearn_Info_15_01");	//Я хотел бы чему-нибудь научиться.
	AI_Output(self,other,"ORG_801_Lares_WhereLearn_Info_11_02");	//Могу помочь. Хочешь увеличить силу и ловкость?
	Log_CreateTopic(GE_TeacherNC,LOG_NOTE);
	B_LogEntry(GE_TeacherNC,"Ларс может помочь мне потренировать и силу, и умение.");
};


instance ORG_801_Lares_Teach(C_Info)
{
	npc = Org_801_Lares;
	nr = 20;
	condition = ORG_801_Lares_Teach_Condition;
	information = ORG_801_Lares_Teach_Info;
	permanent = 1;
	description = "Да, я хочу стать лучше. ";
};


func int ORG_801_Lares_Teach_Condition()
{
	if(Npc_KnowsInfo(hero,ORG_801_Lares_WhereLearn))
	{
		return TRUE;
	};
	return FALSE;
};

func void ORG_801_Lares_Teach_Info()
{
	AI_Output(other,self,"ORG_801_Lares_Teach_15_00");	//Да, я хочу стать лучше.
	Info_ClearChoices(ORG_801_Lares_Teach);
	Info_AddChoice(ORG_801_Lares_Teach,DIALOG_BACK,ORG_801_Lares_Teach_BACK);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_5,5 * LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_1,LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_1);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_5,5 * LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_1,LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_1);
};

func void ORG_801_Lares_Teach_BACK()
{
	Info_ClearChoices(ORG_801_Lares_Teach);
};

func void ORG_801_Lares_Teach_STR_1()
{
	B_BuyAttributePoints(other,ATR_STRENGTH,LPCOST_ATTRIBUTE_STRENGTH);
	Info_ClearChoices(ORG_801_Lares_Teach);
	Info_AddChoice(ORG_801_Lares_Teach,DIALOG_BACK,ORG_801_Lares_Teach_BACK);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_5,5 * LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_1,LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_1);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_5,5 * LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_1,LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_1);
};

func void ORG_801_Lares_Teach_STR_5()
{
	B_BuyAttributePoints(other,ATR_STRENGTH,5 * LPCOST_ATTRIBUTE_STRENGTH);
	Info_ClearChoices(ORG_801_Lares_Teach);
	Info_AddChoice(ORG_801_Lares_Teach,DIALOG_BACK,ORG_801_Lares_Teach_BACK);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_5,5 * LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_1,LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_1);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_5,5 * LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_1,LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_1);
};

func void ORG_801_Lares_Teach_DEX_1()
{
	B_BuyAttributePoints(other,ATR_DEXTERITY,LPCOST_ATTRIBUTE_DEXTERITY);
	Info_ClearChoices(ORG_801_Lares_Teach);
	Info_AddChoice(ORG_801_Lares_Teach,DIALOG_BACK,ORG_801_Lares_Teach_BACK);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_5,5 * LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_1,LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_1);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_5,5 * LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_1,LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_1);
};

func void ORG_801_Lares_Teach_DEX_5()
{
	B_BuyAttributePoints(other,ATR_DEXTERITY,5 * LPCOST_ATTRIBUTE_DEXTERITY);
	Info_ClearChoices(ORG_801_Lares_Teach);
	Info_AddChoice(ORG_801_Lares_Teach,DIALOG_BACK,ORG_801_Lares_Teach_BACK);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_5,5 * LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnStrength_1,LPCOST_ATTRIBUTE_STRENGTH,0),ORG_801_Lares_Teach_STR_1);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_5,5 * LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_5);
	Info_AddChoice(ORG_801_Lares_Teach,B_BuildLearnString(NAME_LearnDexterity_1,LPCOST_ATTRIBUTE_DEXTERITY,0),ORG_801_Lares_Teach_DEX_1);
};

