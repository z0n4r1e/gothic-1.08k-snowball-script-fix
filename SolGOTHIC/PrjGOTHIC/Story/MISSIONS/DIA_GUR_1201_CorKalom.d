
instance GUR_1201_CorKalom_FIRST(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = GUR_1201_CorKalom_FIRST_Condition;
	information = GUR_1201_CorKalom_FIRST_Info;
	permanent = 1;
	important = 1;
};


func int GUR_1201_CorKalom_FIRST_Condition()
{
	if(Npc_IsInState(self,ZS_Talk))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_FIRST_Info()
{
	AI_Output(self,other,"GUR_1201_CorKalom_FIRST_10_00");	//Что тебе нужно?
	Kalom_TalkedTo = TRUE;
};


instance GUR_1201_CorKalom_WannaJoin(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = GUR_1201_CorKalom_WannaJoin_Condition;
	information = GUR_1201_CorKalom_WannaJoin_Info;
	permanent = 0;
	description = "Я хочу стать одним из членов Братства.";
};


func int GUR_1201_CorKalom_WannaJoin_Condition()
{
	if(Npc_GetTrueGuild(hero) == GIL_None)
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_WannaJoin_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_WannaJoin_15_00");	//Я хочу стать одним из членов Братства.
	AI_Output(other,self,"GUR_1201_CorKalom_WannaJoin_15_01");	//Я слышал, ты командуешь послушниками и выбираешь среди них достойных.
	AI_Output(self,other,"GUR_1201_CorKalom_WannaJoin_10_02");	//У меня нет времени! Мои эксперименты слишком важны, я не могу сейчас тратить время на новичков.
	AI_Output(self,other,"GUR_1201_CorKalom_WannaJoin_10_03");	//Я соглашусь с решением Идолов. Возвращайся, когда они скажут, что ты готов носить робу послушника.
	AI_StopProcessInfos(self);
	Log_CreateTopic(CH1_JoinPsi,LOG_MISSION);
	Log_SetTopicStatus(CH1_JoinPsi,LOG_RUNNING);
	B_LogEntry(CH1_JoinPsi,"Кор Галом позволит мне присоединиться к Братству в качестве послушника, если я смогу уговорить четырех Идолов выступить в мою пользу.");
};


instance GUR_1201_CorKalom_Recipe(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 20;
	condition = GUR_1201_CorKalom_Recipe_Condition;
	information = GUR_1201_CorKalom_Recipe_Info;
	permanent = 0;
	description = "Один торговец из Старого Лагеря ищет рецепт.";
};


func int GUR_1201_CorKalom_Recipe_Condition()
{
	if(Dexter_GetKalomsRecipe == LOG_RUNNING)
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_Recipe_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_Recipe_15_00");	//Один торговец из Старого Лагеря ищет рецепт целебного эликсира.
	AI_Output(self,other,"GUR_1201_CorKalom_Recipe_10_01");	//Мои рецепты не продаются!
	B_LogEntry(CH1_KalomsRecipe,"Кор Галом не даст мне рецепта. Но в его лаборатории есть сундуки… А он так увлечен другими делами…");
};


instance GUR_1201_CorKalom_Experimente(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 2;
	condition = GUR_1201_CorKalom_Experimente_Condition;
	information = GUR_1201_CorKalom_Experimente_Info;
	permanent = 1;
	description = "Что за эксперименты ты проводишь?";
};


func int GUR_1201_CorKalom_Experimente_Condition()
{
	if(Kapitel <= 2)
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_Experimente_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_Experimente_15_00");	//Что за эксперименты ты проводишь?
	AI_Output(self,other,"GUR_1201_CorKalom_Experimente_10_01");	//Мои исследования находятся на уровне, недоступном для твоего понимания, мальчик. Не трать попусту мое время!
};


instance GUR_1201_CorKalom_BRINGWEED(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 2;
	condition = GUR_1201_CorKalom_BRINGWEED_Condition;
	information = GUR_1201_CorKalom_BRINGWEED_Info;
	permanent = 1;
	description = "Я принес дневной сбор болотника!";
};


func int GUR_1201_CorKalom_BRINGWEED_Condition()
{
	if(BaalOrun_FetchWeed == LOG_RUNNING)
	{
		return TRUE;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_BRINGWEED_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_BRINGWEED_15_00");	//Я принес дневной сбор болотника!
	if(Npc_HasItems(hero,ItMi_Plants_Swampherb_01) < 100)
	{
		AI_Output(self,other,"GUR_1201_CorKalom_BRINGWEED_10_01");	//И ЭТО - все?! Мне нужен ПОЛНЫЙ сбор - минимум сотня стеблей!!!
		AI_StopProcessInfos(self);
	}
	else
	{
		AI_Output(self,other,"GUR_1201_CorKalom_BRINGWEED_10_02");	//А, давай сюда. И убирайся с глаз моих!
		B_GiveInvItems(hero,self,ItMi_Plants_Swampherb_01,100);
		Npc_RemoveInvItems(self,ItMi_Plants_Swampherb_01,100);
		BaalOrun_FetchWeed = LOG_SUCCESS;
		B_LogEntry(CH1_DeliverWeed,"Когда я вручал ему сегодняшний урожай, Кор Галом был снова просто невыносим.");
		Log_SetTopicStatus(CH1_DeliverWeed,LOG_SUCCESS);
		B_GiveXP(XP_DeliveredWeedHarvest);
		BaalOrun_FetchWeed = LOG_SUCCESS;
		AI_StopProcessInfos(self);
	};
};


instance GUR_1201_CorKalom_Crawlerzangen(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 800;
	condition = GUR_1201_CorKalom_Crawlerzangen_Condition;
	information = GUR_1201_CorKalom_Crawlerzangen_Info;
	permanent = 1;
	description = "Я принес тебе жвалы ползунов...";
};


func int GUR_1201_CorKalom_Crawlerzangen_Condition()
{
	if(Npc_HasItems(other,ItAt_Crawler_01) > 0)
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_Crawlerzangen_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_Crawlerzangen_15_00");	//Я принес тебе жвалы ползунов...
	if(Npc_HasItems(other,ItAt_Crawler_01) > 9)
	{
		AI_Output(self,other,"GUR_1201_CorKalom_Crawlerzangen_10_01");	//Очень хорошо. В награду я дам тебе несколько лучших эликсиров.
		CreateInvItems(self,ItFo_Potion_Mana_03,3);
		B_GiveInvItems(self,hero,ItFo_Potion_Mana_03,3);
	}
	else if(Npc_HasItems(other,ItAt_Crawler_01) > 2)
	{
		AI_Output(self,other,"GUR_1201_CorKalom_Crawlerzangen_10_02");	//Хорошо. В награду я дам тебе несколько эликсиров.
		CreateInvItems(self,ItFo_Potion_Mana_02,2);
		B_GiveInvItems(self,hero,ItFo_Potion_Mana_02,2);
	}
	else
	{
		AI_Output(self,other,"GUR_1201_CorKalom_Crawlerzangen_10_03");	//Х-м. И это все? Вот, забирай магический эликсир и проваливай.
		CreateInvItems(self,ItFo_Potion_Mana_01,1);
		B_GiveInvItems(self,hero,ItFo_Potion_Mana_01,1);
		AI_StopProcessInfos(self);
	};
	B_GiveInvItems(other,self,ItAt_Crawler_01,Npc_HasItems(other,ItAt_Crawler_01));
};


instance GUR_1201_CorKalom_JoinPSI(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = GUR_1201_CorKalom_JoinPSI_Condition;
	information = GUR_1201_CorKalom_JoinPSI_Info;
	permanent = 1;
	description = "Похоже, мне удалось убедить Идолов!";
};


func int GUR_1201_CorKalom_JoinPSI_Condition()
{
	if((Npc_GetTrueGuild(hero) == GIL_None) && Npc_KnowsInfo(hero,GUR_1201_CorKalom_WannaJoin))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_JoinPSI_Info()
{
	var int counter;
	counter = 0;
	AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_00");	//Похоже, мне удалось убедить Идолов!
	if(Npc_KnowsInfo(hero,DIA_BaalOrun_GotWeed))
	{
		AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_01");	//Идол Оран сказал, что я достоин стать верным слугой Спящего.
		counter = counter + 1;
	};
	if(Npc_KnowsInfo(hero,DIA_BaalCadar_SleepSpell))
	{
		AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_02");	//Продолжай...
		AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_03");	//Идол Кадар считает меня способным учеником.
		counter = counter + 1;
	};
	if(Npc_KnowsInfo(hero,DIA_BaalNamib_FirstTalk))
	{
		AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_04");	//Идол Намиб называет меня истинно верующим.
		counter = counter + 1;
	};
	if(Npc_KnowsInfo(hero,DIA_BaalTyon_Vision))
	{
		AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_05");	//Благодаря мне Идола Тиона посетило видение.
		counter = counter + 1;
	};
	if(Npc_KnowsInfo(hero,DIA_BaalTondral_SendToKalom))
	{
		AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_06");	//И?
		AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_07");	//Идол Тондрал сказал, что я должен получить робу. Я привел к нему нового ученика.
		counter = counter + 1;
	};
	if(hero.level >= 5)
	{
		if(counter >= 4)
		{
			AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_08");	//Хорошо. Для меня вполне достаточно того, что тебя поддерживают Идолы.
			AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_09");	//Вот, надень это. А теперь ступай и постарайся приносить пользу.
			CreateInvItem(self,nov_armor_m);
			B_GiveInvItems(self,hero,nov_armor_m,1);
			AI_EquipBestArmor(other);
			Npc_SetTrueGuild(hero,GIL_NOV);
			hero.guild = GIL_NOV;
			B_LogEntry(CH1_JoinPsi,"Сегодня Кор Галом принял меня послушником. Конечно, он снова был непередаваемо невыносим, однако теперь я принадлежу к Братству Спящего.");
			B_LogEntry(GE_TraderPSI,"Я могу получить более хорошие доспехи от Идола Намиба.");
			Log_SetTopicStatus(CH1_JoinPsi,LOG_SUCCESS);
			B_GiveXP(XP_BecomeNovice);
			Log_CreateTopic(CH1_JoinOC,LOG_MISSION);
			Log_SetTopicStatus(CH1_JoinOC,LOG_FAILED);
			B_LogEntry(CH1_JoinOC,"Поскольку я всерьез решил примкнуть к Братству, то я не могу больше претендовать на звание одного из людей Гомеза.");
			Log_CreateTopic(CH1_JoinNC,LOG_MISSION);
			Log_SetTopicStatus(CH1_JoinNC,LOG_FAILED);
			B_LogEntry(CH1_JoinNC,"Поскольку я всерьез решил примкнуть к Братству, то я не могу больше претендовать на звание одного из воров Нового Лагеря.");
		}
		else
		{
			AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_NOT_10_00");	//И?
			AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_NOT_15_01");	//Это все.
			AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_NOT_10_02");	//Ты попусту тратишь мое драгоценное время. Возвращайся, когда хотя бы четверо Идолов признают тебя достойным!
		};
	}
	else
	{
		B_PrintGuildCondition(5);
	};
};


instance GUR_1201_CorKalom_JoinPSI2(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = GUR_1201_CorKalom_JoinPSI2_Condition;
	information = GUR_1201_CorKalom_JoinPSI2_Info;
	permanent = 0;
	description = "Значит, так? Ни приветствий, ни добрых пожеланий - ничего?!";
};


func int GUR_1201_CorKalom_JoinPSI2_Condition()
{
	if(Npc_GetTrueGuild(hero) == GIL_NOV)
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_JoinPSI2_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_10");	//Значит, так? Ни тебе 'добро пожаловать', ни добрых пожеланий - ничего?!
	AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_11");	//Добро пожаловать.
	AI_Output(other,self,"GUR_1201_CorKalom_JoinPSI_15_12");	//Уже лучше.
	AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_13");	//Перестань шляться без дела! Займись чем-нибудь. Вот, возьми этот болотник и отнеси его в Старый Лагерь, Гомезу.
	AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_14");	//Если его головорезы откажутся пропустить тебя, скажи им, что тебя послал Кор Галом.
	CreateInvItems(self,ItMiJoint_3,30);
	B_GiveInvItems(self,hero,ItMiJoint_3,30);
	Kalom_Krautbote = LOG_RUNNING;
	Log_CreateTopic(CH1_KrautBote,LOG_MISSION);
	Log_SetTopicStatus(CH1_KrautBote,LOG_RUNNING);
	B_LogEntry(CH1_KrautBote,"Кор Галом послал меня к Гомезу в Старый Лагерь, чтобы я доставил болотник.");
	AI_Output(self,other,"GUR_1201_CorKalom_JoinPSI_10_15");	//Как, ты еще здесь?
	AI_StopProcessInfos(self);
};


instance Info_Kalom_DrugMonopol(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_Kalom_DrugMonopol_Condition;
	information = Info_Kalom_DrugMonopol_Info;
	permanent = 0;
	description = "У тебя есть для меня другое задание?";
};


func int Info_Kalom_DrugMonopol_Condition()
{
	if(Npc_GetTrueGuild(other) == GIL_NOV)
	{
		return 1;
	};
	return FALSE;
};

func void Info_Kalom_DrugMonopol_Info()
{
	var C_Npc Renyu;
	var C_Npc Killian;
	AI_Output(other,self,"Mis_1_Psi_Kalom_DrugMonopol_15_00");	//У тебя есть для меня другое задание?
	AI_Output(self,other,"Mis_1_Psi_Kalom_DrugMonopol_10_01");	//Несколько умников в Новом Лагере начали сами добывать болотник.
	AI_Output(self,other,"Mis_1_Psi_Kalom_DrugMonopol_10_03");	//Проследи за тем, чтобы они прекратили производство.
	AI_Output(other,self,"Mis_1_Psi_Kalom_DrugMonopol_15_04");	//Как...
	AI_Output(self,other,"Mis_1_Psi_Kalom_DrugMonopol_10_05");	//Детали меня не интересуют!
	AI_Output(self,other,"Mis_1_Psi_Kalom_DrugMonopol_10_06");	//Их Лагерь должен находиться где-то за пределами Нового Лагеря. Ты знаешь, что делать.
	Kalom_DrugMonopol = LOG_RUNNING;
	Log_CreateTopic(CH1_DrugMonopol,LOG_MISSION);
	Log_SetTopicStatus(CH1_DrugMonopol,LOG_RUNNING);
	B_LogEntry(CH1_DrugMonopol,"Кор Галом хочет, чтобы я разобрался с конкурирующим производством болотника в Новом Лагере. Я не представляю себе, где начать. Видимо, придется просто пойти в Новый Лагерь.");
	Renyu = Hlp_GetNpc(Org_860_Renyu);
	Renyu.aivar[AIV_WASDEFEATEDBYSC] = FALSE;
	Killian = Hlp_GetNpc(Org_861_Killian);
	Killian.aivar[AIV_WASDEFEATEDBYSC] = FALSE;
};


instance Info_Kalom_Success(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_Kalom_Success_Condition;
	information = Info_Kalom_Success_Info;
	permanent = 1;
	description = "По поводу болотника в Новом Лагере...";
};


func int Info_Kalom_Success_Condition()
{
	if(Kalom_DrugMonopol == LOG_RUNNING)
	{
		return 1;
	};
	return FALSE;
};

func void Info_Kalom_Success_Info()
{
	var C_Npc Killian;
	var C_Npc Renyu;
	var C_Npc Jacko;
	Killian = Hlp_GetNpc(Org_861_Killian);
	Renyu = Hlp_GetNpc(Org_860_Renyu);
	Jacko = Hlp_GetNpc(Org_862_Jacko);
	AI_Output(other,self,"Mis_1_Psi_Kalom_Success_15_00");	//По поводу болотника в Новом Лагере...
	AI_Output(self,other,"Mis_1_Psi_Kalom_Success_10_01");	//Да?
	if(Stooges_Fled != TRUE)
	{
		AI_Output(other,self,"Mis_1_Psi_Kalom_Success_15_02");	//Я не нашел этих людей.
		AI_Output(self,other,"Mis_1_Psi_Kalom_Success_10_03");	//Ничего другого я от тебя и не ожидал.
	}
	else if((Stooges_Fled == TRUE) || (Npc_IsDead(Jacko) && Npc_IsDead(Renyu) && Npc_IsDead(Killian)))
	{
		AI_Output(other,self,"Mis_1_Psi_Kalom_Success_15_04");	//Вопрос решен.
		AI_Output(self,other,"Mis_1_Psi_Kalom_Success_10_05");	//Ты удивляешь меня. Я недооценивал твои способности. Похоже, ты можешь быть полезным.
		Kalom_DrugMonopol = LOG_SUCCESS;
		B_LogEntry(CH1_DrugMonopol,"Я проинформировал Кор Галома, что про конкурентов из Нового Лагеря он может забыть. Он снова был очень 'дружелюбен'.");
		Log_SetTopicStatus(CH1_DrugMonopol,LOG_SUCCESS);
		B_GiveXP(XP_DrugMonopol);
	};
};


instance Info_Kalom_KrautboteBACK(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = Info_Kalom_KrautboteBACK_Condition;
	information = Info_Kalom_KrautboteBACK_Info;
	permanent = 1;
	description = "Я доставил болотник.";
};


func int Info_Kalom_KrautboteBACK_Condition()
{
	if(Kalom_DeliveredWeed)
	{
		return TRUE;
	};
	return FALSE;
};

func void Info_Kalom_KrautboteBACK_Info()
{
	AI_Output(other,self,"Mis_1_Psi_Kalom_KrautboteBACK_15_00");	//Я доставил болотник.
	if(Npc_HasItems(hero,ItMiNugget) >= 500)
	{
		AI_Output(self,other,"Mis_1_Psi_Kalom_KrautboteBACK_10_01");	//Хорошо. Найди себе другое задание.
		Kalom_DrugMonopol = LOG_SUCCESS;
		B_LogEntry(CH1_KrautBote,"Кор Галом получил деньги за доставленный Баронам болотник.");
		Log_SetTopicStatus(CH1_KrautBote,LOG_SUCCESS);
		B_GiveInvItems(hero,self,ItMiNugget,500);
		B_GiveXP(XP_WeedShipmentReported);
		Info_Kalom_KrautboteBACK.permanent = 0;
	}
	else
	{
		AI_Output(self,other,"Mis_1_Psi_Kalom_KrautboteBACK_10_02");	//Где пять сотен кусков руды, мальчик? Постарайся, чтобы я получил их как можно быстрее!
	};
};


instance Info_CorKalom_BringFocus(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_CorKalom_BringFocus_Condition;
	information = Info_CorKalom_BringFocus_Info;
	permanent = 0;
	important = 0;
	description = "Меня прислал Ю`Берион. Я принес юнитор.";
};


func int Info_CorKalom_BringFocus_Condition()
{
	if((YBerion_BringFocus == LOG_SUCCESS) && Npc_HasItems(hero,Focus_1))
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_BringFocus_Info()
{
	AI_Output(other,self,"Sit_2_PSI_Yberion_BringFocus_Info3_15_01");	//Меня прислал Ю`Берион. Я принес юнитор.
	AI_Output(self,other,"Sit_2_PSI_Yberion_BringFocus_Info3_10_02");	//А-ааа, юнитор... Наконец-то. Теперь я смогу постичь магическую сущность этих артефактов.
	AI_Output(self,other,"Sit_2_PSI_Yberion_BringFocus_Info3_10_03");	//Если бы только у меня было достаточно слюны ползунов... черт!
	B_LogEntry(CH2_Focus,"Я доставил юнитор Кор Галому!");
	Log_SetTopicStatus(CH2_Focus,LOG_SUCCESS);
	B_GiveInvItems(hero,self,Focus_1,1);
	Npc_RemoveInvItem(self,Focus_1);
	B_GiveXP(XP_BringFocusToCorKalom);
};


instance Info_CorKalom_BLUFF(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 10;
	condition = Info_CorKalom_BLUFF_Condition;
	information = Info_CorKalom_BLUFF_Info;
	permanent = 0;
	description = "Ю`Берион сказал, что ты заплатишь мне за юнитор.";
};


func int Info_CorKalom_BLUFF_Condition()
{
	if(Npc_KnowsInfo(hero,Info_CorKalom_BringFocus) && (CorKalom_BringMCQBalls != LOG_SUCCESS))
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_BLUFF_Info()
{
	AI_Output(other,self,"Sit_2_PSI_Yberion_BLUFF_Info3_15_01");	//Ю`Берион сказал, что ты заплатишь мне за юнитор.
	AI_Output(self,other,"Sit_2_PSI_Yberion_BLUFF_Info3_10_02");	//В самом деле? Он так сказал? Ну, хорошо. Думаю, пятидесяти кусков руды будет вполне достаточно!
	CreateInvItems(self,ItMiNugget,50);
	B_GiveInvItems(self,other,ItMiNugget,50);
};


instance GUR_1201_CorKalom_SACHE(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_SACHE_Condition;
	information = GUR_1201_CorKalom_SACHE_Info;
	important = 0;
	permanent = 0;
	description = "Слюны?";
};


func int GUR_1201_CorKalom_SACHE_Condition()
{
	if(Npc_KnowsInfo(hero,Info_CorKalom_BringFocus))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_SACHE_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_SACHE_Info_15_01");	//Слюны?
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_Info_10_02");	//Да. Ты должен знать, что я готовлю магические эликсиры для вызова Спящего. Для этого мне нужна слюна, которая выделяется из жвал ползунов.
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_Info_10_03");	//Ты знаешь, кто такие ползуны, ведь так?
	Info_ClearChoices(GUR_1201_CorKalom_SACHE);
	Info_AddChoice(GUR_1201_CorKalom_SACHE,"Нет.",GUR_1201_CorKalom_SACHE_NEIN);
	Info_AddChoice(GUR_1201_CorKalom_SACHE,"Да.",GUR_1201_CorKalom_SACHE_JA);
};

func void GUR_1201_CorKalom_SACHE_NEIN()
{
	AI_Output(other,self,"GUR_1201_CorKalom_SACHE_NEIN_15_01");	//Нет.
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_NEIN_10_02");	//Эти жуткие твари обитают во тьме пещер и пожирают человеческую плоть.
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_NEIN_10_03");	//Их жвалы выделяют особую жидкость.
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_NEIN_10_04");	//Я использую ее для приготовления эликсира, который открывает спиритическую связь со Спящим.
	Info_ClearChoices(GUR_1201_CorKalom_SACHE);
};

func void GUR_1201_CorKalom_SACHE_JA()
{
	AI_Output(other,self,"GUR_1201_CorKalom_SACHE_JA_15_01");	//Да.
	AI_Output(self,other,"GUR_1201_CorKalom_SACHE_JA_10_02");	//Очень хорошо!
	Info_ClearChoices(GUR_1201_CorKalom_SACHE);
};


instance GUR_1201_CorKalom_VISION(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_VISION_Condition;
	information = GUR_1201_CorKalom_VISION_Info;
	important = 0;
	permanent = 0;
	description = "Продолжай!";
};


func int GUR_1201_CorKalom_VISION_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_SACHE))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_VISION_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_VISION_Info_15_01");	//Продолжай!
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_02");	//Совсем недавно меня посетило видение. Сам Спящий подал мне знак.
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_03");	//И я понял, что помимо слюны ползунов есть и другие средства.
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_04");	//И он избрал меня для этой миссии. Ты получаешь ее не от меня. Ты получаешь задание от самого Спящего!
	AI_Output(other,self,"GUR_1201_CorKalom_VISION_Info_15_05");	//Невероятно!
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_06");	//Молчи, глупец!
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_07");	//И понял я, что нахожусь на правильном пути, но мои средства недостаточно сильны.
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_08");	//Ответ кроется в ползунах, но жвал их явно недостаточно.
	AI_Output(self,other,"GUR_1201_CorKalom_VISION_Info_10_09");	//Должно быть что-то еще.
};


instance GUR_1201_CorKalom_NEST(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_NEST_Condition;
	information = GUR_1201_CorKalom_NEST_Info;
	important = 0;
	permanent = 0;
	description = "Ты что, никогда не изучал ползунов?";
};


func int GUR_1201_CorKalom_NEST_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_VISION))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_NEST_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_NEST_Info_15_01");	//Ты что, никогда не изучал ползунов? Я имею в виду - возможно, в какой-то другой части их тела содержится больше этого вещества.
	AI_Output(self,other,"GUR_1201_CorKalom_NEST_Info_10_02");	//Разумеется, я препарировал ползунов, но похоже лишь в их жвалах содержатся необходимые нам выделения.
	AI_Output(self,other,"GUR_1201_CorKalom_NEST_Info_10_03");	//Но должно быть что-то еще... Найди их логово и мы получим ответ!
	CorKalom_BringMCQBalls = LOG_RUNNING;
};

func void GUR_1201_CorKalom_WEG_ACCEPT()
{
	Log_CreateTopic(CH2_MCEggs,LOG_MISSION);
	Log_SetTopicStatus(CH2_MCEggs,LOG_RUNNING);
	B_LogEntry(CH2_MCEggs,"Гуру Кор Галом попросил меня поискать источник слюны ползунов в Старой Шахте. До сих пор использовались челюсти этих монстров, но мне надо найти источник более концентрированной жидкости.");
	if(PresseTourJanuar2001)
	{
		CreateInvItems(hero,ItAt_Crawlerqueen,3);
	};
};


instance GUR_1201_CorKalom_WEG(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_WEG_Condition;
	information = GUR_1201_CorKalom_WEG_Info;
	nr = 21;
	important = 0;
	permanent = 0;
	description = "Поиски во тьме - дело нелегкое и опасное!";
};


func int GUR_1201_CorKalom_WEG_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_NEST) && !Npc_KnowsInfo(hero,GUR_1201_CorKalom_RAT))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_WEG_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_WEG_Info_15_01");	//Поиски во тьме - дело нелегкое и опасное!
	AI_Output(self,other,"GUR_1201_CorKalom_WEG_Info_10_02");	//Возьми эти свитки с Заклинанием Света и используй их во тьме пещер.
	AI_Output(self,other,"GUR_1201_CorKalom_WEG_Info_10_03");	//Стражи в шахтах помогут тебе.
	AI_Output(self,other,"GUR_1201_CorKalom_WEG_Info_10_04");	//Да придаст тебе сил Спящий, и да прольется свет его на твой путь, и просветит он дух твой и укрепит веру твою!
	CreateInvItems(self,ItArScrollLight,5);
	B_GiveInvItems(self,other,ItArScrollLight,5);
	GUR_1201_CorKalom_WEG_ACCEPT();
};


instance GUR_1201_CorKalom_RAT(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_RAT_Condition;
	information = GUR_1201_CorKalom_RAT_Info;
	nr = 20;
	important = 0;
	permanent = 0;
	description = "Бой обещает быть трудным...";
};


func int GUR_1201_CorKalom_RAT_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_NEST) && !Npc_KnowsInfo(hero,GUR_1201_CorKalom_WEG))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_RAT_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_RAT_Info_15_01");	//Бой обещает быть трудным...
	AI_Output(self,other,"GUR_1201_CorKalom_RAT_Info_10_02");	//Возьми эти целебные эликсиры.
	AI_Output(self,other,"GUR_1201_CorKalom_RAT_Info_10_03");	//Я даю их тебе не потому, что хочу, чтобы ты уцелел, но потому, что миссия, возложенная на тебя, должна быть выполнена.
	CreateInvItems(self,ItFo_Potion_Health_02,5);
	B_GiveInvItems(self,other,ItFo_Potion_Health_02,5);
	GUR_1201_CorKalom_WEG_ACCEPT();
};


instance GUR_1201_CorKalom_RUN(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_RUN_Condition;
	information = GUR_1201_CorKalom_RUN_Info;
	important = 0;
	permanent = 0;
	description = "Где мне искать ползунов?";
};


func int GUR_1201_CorKalom_RUN_Condition()
{
	if((CorKalom_BringMCQBalls == LOG_RUNNING) && (Npc_HasItems(hero,ItAt_Crawlerqueen) < 1))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_RUN_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_RUN_Info_15_01");	//Где мне искать ползунов?
	AI_Output(self,other,"GUR_1201_CorKalom_RUN_Info_10_02");	//В Старой Шахте.
	if(!EnteredOldMine)
	{
		AI_Output(other,self,"GUR_1201_CorKalom_RUN_Info_15_03");	//Где находится Старая Шахта?
		AI_Output(self,other,"GUR_1201_CorKalom_RUN_Info_10_04");	//Возьми эту карту. На ней отмечены все важные места, которые находятся внутри Барьера.
		CreateInvItem(self,ItWrWorldmap);
		B_GiveInvItems(self,other,ItWrWorldmap,1);
	};
};


instance GUR_1201_CorKalom_CRAWLER(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_CRAWLER_Condition;
	information = GUR_1201_CorKalom_CRAWLER_Info;
	important = 0;
	permanent = 0;
	description = "Как победить ползунов?";
};


func int GUR_1201_CorKalom_CRAWLER_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_RUN) && (CorKalom_BringMCQBalls != LOG_SUCCESS))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_CRAWLER_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_CRAWLER_Info_15_01");	//Как победить ползунов?
	AI_Output(self,other,"GUR_1201_CorKalom_CRAWLER_Info_10_02");	//В шахте ты встретишь Стражей. Они охотятся на позунов и добывают для меня их жвалы. Поговори с Гор На Витом - он поможет тебе.
};


instance GUR_1201_CorKalom_FIND(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = GUR_1201_CorKalom_FIND_Condition;
	information = GUR_1201_CorKalom_FIND_Info;
	important = 0;
	permanent = 0;
	description = "Как отыскать логово ползунов в шахте?";
};


func int GUR_1201_CorKalom_FIND_Condition()
{
	if(Npc_KnowsInfo(hero,GUR_1201_CorKalom_CRAWLER))
	{
		return 1;
	};
	return FALSE;
};

func void GUR_1201_CorKalom_FIND_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_FIND_Info_15_01");	//Как отыскать логово ползунов в шахте?
	AI_Output(self,other,"GUR_1201_CorKalom_FIND_Info_10_02");	//Это будет самой сложной частью твоей миссии. Я не могу сказать тебе, где и что ты должен искать. Но рядом с тобой будет незримо присутствовать Спящий.
	AI_Output(other,self,"GUR_1201_CorKalom_FIND_Info_15_03");	//Да, мне сразу стало легче.
};


instance Info_CorKalom_BringMCQBalls_Success(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_CorKalom_BringMCQBalls_Success_Condition;
	information = Info_CorKalom_BringMCQBalls_Success_Info;
	permanent = 0;
	description = "Я нашел яйца из кладки королевы ползунов.";
};


func int Info_CorKalom_BringMCQBalls_Success_Condition()
{
	if(Npc_HasItems(hero,ItAt_Crawlerqueen) >= 3)
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_BringMCQBalls_Success_Info()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_15_01");	//Я нашел яйца из кладки королевы ползунов.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_10_02");	//Я знал это! Мое видение было знаком Спящего! В них концентрация этого вещества должна быть очень высокой! 
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_10_03");	//Великолепно! Теперь я смогу создать эликсир, который поможет нам призвать Спящего!
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_15_04");	//А что насчет награды?
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_10_05");	//Ах, да... Благодарю тебя!
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_15_06");	//Я имел в виду нечто более материальное...
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_10_07");	//Хорошо, хорошо. Чего ты хочешь?
	CorKalom_BringMCQBalls = LOG_SUCCESS;
	B_GiveInvItems(hero,self,ItAt_Crawlerqueen,3);
	Npc_RemoveInvItems(self,ItAt_Crawlerqueen,3);
	B_GiveXP(XP_BringMCEggs);
	B_LogEntry(CH2_MCEggs,"Я дал Кор Галому три яйца ползунов. Он был весьма недружелюбен: мне пришлось просто выпрашивать свою награду!");
	Log_SetTopicStatus(CH2_MCEggs,LOG_SUCCESS);
	B_LogEntry(CH1_GotoPsiCamp,"Я уверен, что теперь знаю достаточно о делах секты. Можно возвращаться к Мордрагу.");
	B_LogEntry(CH1_GoToPsi,"Я уверен, что теперь знаю достаточно о делах секты. Надо рассказать Равену обо всем, как только окажусь в Старом Лагере.");
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
	Info_AddChoice(Info_CorKalom_BringMCQBalls_Success,"Руна.",Info_CorKalom_BringMCQBalls_Success_RUNE);
	Info_AddChoice(Info_CorKalom_BringMCQBalls_Success,"Оружие.",Info_CorKalom_BringMCQBalls_Success_WAFFE);
	Info_AddChoice(Info_CorKalom_BringMCQBalls_Success,"Целебный эликсир.",Info_CorKalom_BringMCQBalls_Success_HEAL);
	Info_AddChoice(Info_CorKalom_BringMCQBalls_Success,"Руда.",Info_CorKalom_BringMCQBalls_Success_ORE);
	Info_AddChoice(Info_CorKalom_BringMCQBalls_Success,"Мана.",Info_CorKalom_BringMCQBalls_Success_MANA);
};

func void Info_CorKalom_BringMCQBalls_Success_RUNE()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_RUNE_15_01");	//Руну.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_RUNE_10_02");	//Пусть руна эта осветит твой путь!
	CreateInvItem(self,ItArRuneLight);
	B_GiveInvItems(self,hero,ItArRuneLight,1);
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
};

func void Info_CorKalom_BringMCQBalls_Success_WAFFE()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_WAFFE_15_01");	//Оружие.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_WAFFE_10_02");	//Пусть это оружие сокрушит всех твоих врагов!
	CreateInvItem(self,ItMw_1H_Mace_War_03);
	B_GiveInvItems(self,hero,ItMw_1H_Mace_War_03,1);
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
};

func void Info_CorKalom_BringMCQBalls_Success_HEAL()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_HEAL_15_01");	//Целебный эликсир.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_HEAL_10_02");	//Да продлит он твою жизнь в минуту опасности!
	CreateInvItem(self,ItFo_Potion_Health_Perma_01);
	B_GiveInvItems(self,hero,ItFo_Potion_Health_Perma_01,1);
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
};

func void Info_CorKalom_BringMCQBalls_Success_ORE()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_ORE_15_01");	//Руду.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_ORE_10_02");	//Прими эту руду в знак признательности всего Братства!
	CreateInvItems(self,ItMiNugget,100);
	B_GiveInvItems(self,hero,ItMiNugget,100);
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
};

func void Info_CorKalom_BringMCQBalls_Success_MANA()
{
	AI_Output(other,self,"Mis_2_PSI_Kalom_BringMCQEggs_Success_MANA_15_01");	//Ману.
	AI_Output(self,other,"Mis_2_PSI_Kalom_BringMCQEggs_Success_MANA_10_02");	//Пусть этот эликсир усилит магический поток, струящийся внутри тебя!
	CreateInvItem(self,ItFo_Potion_Mana_Perma_01);
	B_GiveInvItems(self,hero,ItFo_Potion_Mana_Perma_01,1);
	Info_ClearChoices(Info_CorKalom_BringMCQBalls_Success);
};


instance Info_CorKalom_BringBook(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_CorKalom_BringBook_Condition;
	information = Info_CorKalom_BringBook_Info;
	permanent = 0;
	description = "Может, мы начнем призывать Спящего прямо сейчас?";
};


func int Info_CorKalom_BringBook_Condition()
{
	if(CorKalom_BringMCQBalls == LOG_SUCCESS)
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_BringBook_Info()
{
	AI_Output(other,self,"Info_CorKalom_BringBook_Info_15_01");	//Может, мы начнем призывать Спящего прямо сейчас?
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_02");	//Нет! Я еще не нашел способа зарядить юнитор.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_03");	//Древние знания об этих артефактах утеряны.
	AI_Output(other,self,"Info_CorKalom_BringBook_Info_15_04");	//Ты хочешь сказать, что я собирал эти яйца впустую?
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_05");	//Нет, послушай меня. Есть альманах, в котором содержатся все необходимые нам знания.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_06");	//Я купил эту книгу у Корристо, мага Огня из Старого Лагеря.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_07");	//Но она была украдена по пути из Старого Лагеря в лабораторию.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_08");	//За книгой я отрядил Таласа, новичка. Его ограбили.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_09");	//Он подвел меня, но я дал ему еще один шанс. Он должен вернуть утерянный альманах.
	AI_Output(self,other,"Info_CorKalom_BringBook_Info_10_10");	//Поговори с ним. Ему сейчас нужна любая помощь.
	CorKalom_BringBook = LOG_RUNNING;
	Log_CreateTopic(CH2_Book,LOG_MISSION);
	Log_SetTopicStatus(CH2_Book,LOG_RUNNING);
	B_LogEntry(CH2_Book,"Кор Галому нужен последний предмет для проведения церемонии. Это книга об использовании камней-юниторов. Послушник Талас не смог ее уберечь, и гоблины утащили альманах. Сейчас он ищет на храмовой площади кого-нибудь, кто помог бы ему вернуть книгу.");
	Info_ClearChoices(Info_CorKalom_BringBook);
	Info_AddChoice(Info_CorKalom_BringBook,DIALOG_BACK,Info_CorKalom_BringBook_BACK);
	Info_AddChoice(Info_CorKalom_BringBook,"Что я получу за это?",Info_CorKalom_BringBook_EARN);
	Info_AddChoice(Info_CorKalom_BringBook,"Кто похитил альманах?",Info_CorKalom_BringBook_WHO);
	Info_AddChoice(Info_CorKalom_BringBook,"Где я могу найти Таласа?",Info_CorKalom_BringBook_WHERE);
};

func void Info_CorKalom_BringBook_BACK()
{
	Info_ClearChoices(Info_CorKalom_BringBook);
};

func void Info_CorKalom_BringBook_WHERE()
{
	AI_Output(other,self,"Info_CorKalom_BringBook_Where_15_01");	//Где я могу найти Таласа?
	AI_Output(self,other,"Info_CorKalom_BringBook_Where_10_02");	//Ты найдешь его у подножия Холма - там он пытается уговорить людей помочь ему.
};

func void Info_CorKalom_BringBook_WHO()
{
	AI_Output(other,self,"Info_CorKalom_BringBook_Who_15_01");	//Кто похитил альманах?
	AI_Output(self,other,"Info_CorKalom_BringBook_Who_10_02");	//Талас сказал, что на него напали черные гоблины. Это несколько странно, но все же вполне правдоподобно. 
};

func void Info_CorKalom_BringBook_EARN()
{
	AI_Output(other,self,"Info_CorKalom_BringBook_Earn_15_01");	//Что я получу за это?
	AI_Output(self,other,"Info_CorKalom_BringBook_Earn_10_02");	//Разве я уже не доказал тебе свою щедрость? Ты получишь достойную награду.
};


instance Info_CorKalom_BringBook_Success(C_Info)
{
	npc = GUR_1201_CorKalom;
	condition = Info_CorKalom_BringBook_Success_Condition;
	information = Info_CorKalom_BringBook_Success_Info;
	permanent = 0;
	description = "Я нашел книгу.";
};


func int Info_CorKalom_BringBook_Success_Condition()
{
	if(Npc_HasItems(hero,ItWrFokusbuch) && (CorKalom_BringBook == LOG_RUNNING))
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_BringBook_Success_Info()
{
	AI_Output(other,self,"Info_CorKalom_BringBook_Success_15_01");	//Я нашел книгу.
	AI_Output(self,other,"Info_CorKalom_BringBook_Success_10_02");	//Отличная работа! Теперь у нас есть все, что нужно.
	AI_Output(self,other,"Info_CorKalom_BringBook_Success_10_03");	//Сейчас я завершу последние приготовления.
	AI_Output(other,self,"Info_CorKalom_BringBook_Success_15_04");	//Где состоится церемония?
	AI_Output(self,other,"Info_CorKalom_BringBook_Success_10_05");	//Дождись ночи и приходи во двор храма. Мы соберемся там, для того чтобы призвать великого Спящего.
	B_GiveInvItems(hero,self,ItWrFokusbuch,1);
	Npc_RemoveInvItem(self,ItWrFokusbuch);
	B_GiveXP(XP_BringBook);
	CorKalom_BringBook = LOG_SUCCESS;
	B_LogEntry(CH2_Book,"После того как я принес альманах Кор Галому, он  начал готовиться к вызову Спящего. Церемония должна состояться на храмовой площади. Ночью.");
	Log_SetTopicStatus(CH2_Book,LOG_SUCCESS);
	AI_StopProcessInfos(self);
	B_Story_PrepareRitual();
};


instance Info_CorKalom_Belohnung(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 1;
	condition = Info_CorKalom_Belohnung_Condition;
	information = Info_CorKalom_Belohnung_Info;
	permanent = 0;
	description = "Как насчет оплаты?";
};


func int Info_CorKalom_Belohnung_Condition()
{
	if(Npc_KnowsInfo(hero,Info_CorKalom_BringBook_Success))
	{
		return 1;
	};
	return FALSE;
};

func void Info_CorKalom_Belohnung_Info()
{
	AI_Output(other,self,"Info_CorKalom_Belohnung_15_00");	//Как насчет оплаты?
	AI_Output(self,other,"Info_CorKalom_Belohnung_10_01");	//Чего ты хочешь?
	Info_ClearChoices(Info_CorKalom_Belohnung);
	Info_AddChoice(Info_CorKalom_Belohnung,"Магический свиток.",Info_CorKalom_Belohnung_SCROLL);
	Info_AddChoice(Info_CorKalom_Belohnung,"Руда.",Info_CorKalom_Belohnung_ORE);
	Info_AddChoice(Info_CorKalom_Belohnung,"Магический эликсир.",Info_CorKalom_Belohnung_MANA);
};

func void Info_CorKalom_Belohnung_SCROLL()
{
	AI_Output(other,self,"Info_CorKalom_Belohnung_SCROLL_15_00");	//Отдай мне эти свитки с заклинаниями.
	AI_Output(self,other,"Info_CorKalom_Belohnung_SCROLL_10_01");	//Используй эти заклинания мудро.
	CreateInvItems(self,ItArScrollSleep,3);
	B_GiveInvItems(self,hero,ItArScrollSleep,3);
	Info_ClearChoices(Info_CorKalom_Belohnung);
};

func void Info_CorKalom_Belohnung_ORE()
{
	AI_Output(other,self,"Info_CorKalom_Belohnung_ORE_15_00");	//Мне бы пригодилась руда.
	AI_Output(self,other,"Info_CorKalom_Belohnung_ORE_10_01");	//Это удовлетворит твою страсть к богаству.
	CreateInvItems(self,ItMiNugget,300);
	B_GiveInvItems(self,hero,ItMiNugget,300);
	Info_ClearChoices(Info_CorKalom_Belohnung);
};

func void Info_CorKalom_Belohnung_MANA()
{
	AI_Output(other,self,"Info_CorKalom_Belohnung_MANA_15_00");	//Мне нужны магические эликсиры.
	AI_Output(self,other,"Info_CorKalom_Belohnung_MANA_10_01");	//Да придадут они тебе силы!
	CreateInvItems(self,ItFo_Potion_Mana_02,5);
	B_GiveInvItems(self,hero,ItFo_Potion_Mana_02,5);
	Info_ClearChoices(Info_CorKalom_Belohnung);
};


instance GUR_1201_CorKalom_Exit(C_Info)
{
	npc = GUR_1201_CorKalom;
	nr = 999;
	condition = GUR_1201_CorKalom_Exit_Condition;
	information = GUR_1201_CorKalom_Exit_Info;
	important = 0;
	permanent = 1;
	description = DIALOG_ENDE;
};


func int GUR_1201_CorKalom_Exit_Condition()
{
	return 1;
};

func void GUR_1201_CorKalom_Exit_Info()
{
	AI_Output(other,self,"GUR_1201_CorKalom_Exit_15_01");	//До встречи!
	AI_Output(self,other,"GUR_1201_CorKalom_Exit_10_02");	//Да просветит тебя Спящий!
	AI_StopProcessInfos(self);
};

